q1

хорошая верстка с точки зрения пользователя:
быстро и корректно отображается в твоих броузерах на твоих устройствах и броузерах на устройствах друзей, удобна в работе без мыши и тачпада, продумана для увеличения, скринридеров и поддерживает возможность распечатки.

хорошая верстка с точки зрения менеджера проекта:
делается за предсказуемое время, соответствует поставленному тз, поддерживает возможность правок за предсказуемое время.

хорошая верстка с точки зрения дизайнера:
выполнена в соответствии с замыслом и тз проекта,

хорошая верстка с точки зрения верстальщика:
содержит корректный хорошоструктурированный модульный код,
в который можно внести правки и получить ожидаемые изменения

хорошая верстка с точки зрения клиентского программиста:
содержит модульный код, переменные понятны и изолированы, удачно построена в структурном отношении.

хорошая верстка с точки зрения серверного программиста:
хорошо структурирована, содержит понятные переменные,
понятные классы, имеет корректную структуру данных.


Q2
Опишите основные особенности верстки крупных многостраничных сайтов, дизайн которых может меняться в процессе реализации и поддержки.

Хорошие верстальщики думают о структуре данных и потоке,
а плохие – лишь только о коде).
Важно поддерживать чистоту и точность конструкций кода
большого проекта. Чтобы сохранить актуальное поведение
каждого модуля нужно поддерживать ui kit в актуальном состоянии и информировать о его существовании и актуальном состоянии дизайнеров и других авторов и координаторов проекта такой Two-Way data binding irl).

Мне приходилось наводить порядок на среднего размера проекте,
где основная сложность была в том, что код длительное время поддерживался одним человеком, некоторые участки кода перестали работать в неустановленом прошлом, актуальность и задвоенность кода нужно было приводить к детерминированному состоянию, попутно избавляясь от обфусцированного кода и реализаций поведения ui, интегрированных в устаревающие js компоненты и переводя эти свойства и модификаторы в соответствующие изолированные css модули.
Доводилось применять методологию БЕМ, атомарный css, инструмент gulp.

Q3
Опишите основные особенности верстки сайтов, которые должны одинаково хорошо отображаться как на любом современном компьютере, так и на смартфонах и планшетах под управлением iOS и Android. Расскажите о своем опыте верстки подобных сайтов: какие инструменты и технологии вы применяли, как проверяли результат на различных устройствах, какие именно устройства требовалось поддерживать.

У нас был целый отдел который помогал нам тестировать предоставляя физические телефон планшеты и тд.
несмотря на что я принес целый старый компьютер с виндой и живым интернет-эксплорером.
На мобильные телефоны проксировал страничку gulp --serve через докер по локальной сети. Поддерживали в основном 4й иногда 5й айфоны и более поздние, андроиды от 320 пикселей в ширь.

Q4
Расскажите, какие инструменты помогают вам экономить время в процессе написания, проверки и отладки кода.

gulp-plumber gulp notify,
в отладке кода и анализе и оптимизации скорости загрузки помогали developer tools хрома, фаерфокса и сафари,
eslint при отладке js,
при написании html помогал emmet,
автокомплиты – при написании css правил

Q5
Вам нужно понять, почему страница отображается некорректно в Safari на iOS и в IE на Windows. Код писали не вы, доступа к исходникам у вас нет. Ваши действия? Сталкивались ли вы с подобными проблемами на практике?

Бывало такое.
Обычно я открываю dev tools и смотрю в консоль и на элементы - поэтапно локализую ошибку и попутно ищу источник ее возникновения.

Q6
Дизайнер отдал вам макет, в котором не показано, как должны выглядеть интерактивные элементы при наведении мыши. Ваши действия?

Если нет договоренности на сей счет - я уточняю прямым вопросом каковы требуемые состояния, прошу добавить в примечания к таску или сам макет и начинаю делать верстку пока дизайнер думает над ответом.

Q7
Какие ресурсы вы используете для развития в профессиональной сфере? Приведите несколько конкретных примеров (сайты, блоги и так далее).
Какое направление развития вам более близко: JS-программирование, HTML/CSS- верстка или и то, и другое?
Какие ещё области знаний, кроме тех, что непосредственно относятся к работе, вам интересны?

MDN, w3school, html-academy, Css trics, smashing magazine, tympanus, статьи Криса Коера, fun fun function, dev tips и многие другие, чаты в телеграм и группы вк о фронтенде.

Q8
Расскажите нам о себе и предоставьте несколько ссылок на последние работы, выполненные вами.

обо мне https://thelonius.github.io/studio/

верстал сайты:
icarus.101xp.com, loa2.101xp.com, mstar.101xp.com

